var searchIndex = JSON.parse('{\
"cfg_if":{"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]},\
"log":{"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \\\"payload\\\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",null,null],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn\'t…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_logger","","Sets the global logger to a `&\'static Log`.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger_racy","","A thread-unsafe version of [`set_logger`].",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["metadata",3]]]],[10,"log","","Logs the `Record`.",2,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",2,[[]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[],["levelfilter",4]]],[11,"as_str","","Returns the string representation of the `Level`.",0,[[]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter",4]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[],[["level",4],["option",4]]]],[11,"as_str","","Returns the string representation of the `LevelFilter`.",1,[[]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder",3]]],[11,"args","","The message body.",3,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",3,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",3,[[],["level",4]]],[11,"target","","The name of the target of the directive.",3,[[]]],[11,"module_path","","The module path of the message.",3,[[],["option",4]]],[11,"module_path_static","","The module path of the message, if it is a `\'static` string.",3,[[],["option",4]]],[11,"file","","The source file containing the message.",3,[[],["option",4]]],[11,"file_static","","The module path of the message, if it is a `\'static` string.",3,[[],["option",4]]],[11,"line","","The line containing the message.",3,[[],["option",4]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder",3]]],[11,"args","","Set `args`.",4,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set `Metadata::level`.",4,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set `Metadata::target`",4,[[],["recordbuilder",3]]],[11,"module_path","","Set `module_path`",4,[[["option",4]],["recordbuilder",3]]],[11,"module_path_static","","Set `module_path` to a `\'static` string",4,[[["option",4]],["recordbuilder",3]]],[11,"file","","Set `file`",4,[[["option",4]],["recordbuilder",3]]],[11,"file_static","","Set `file` to a `\'static` string.",4,[[["option",4]],["recordbuilder",3]]],[11,"line","","Set `line`",4,[[["option",4]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a `Record`",4,[[],["record",3]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",5,[[],["level",4]]],[11,"target","","The name of the target of the directive.",5,[[]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder",3]]],[11,"level","","Setter for `level`.",6,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for `target`.",6,[[],["metadatabuilder",3]]],[11,"build","","Returns a `Metadata` object.",6,[[],["metadata",3]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["level",4]]]],[11,"eq","","",0,[[["levelfilter",4]]]],[11,"eq","","",1,[[["levelfilter",4]]]],[11,"eq","","",1,[[["level",4]]]],[11,"eq","","",5,[[["metadata",3]]]],[11,"ne","","",5,[[["metadata",3]]]],[11,"eq","","",6,[[["metadatabuilder",3]]]],[11,"ne","","",6,[[["metadatabuilder",3]]]],[11,"eq","","",8,[[["parselevelerror",3]]]],[11,"ne","","",8,[[["parselevelerror",3]]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"cmp","","",1,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",5,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",6,[[["metadatabuilder",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["level",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["level",4]]]],[11,"le","","",0,[[["level",4]]]],[11,"gt","","",0,[[["level",4]]]],[11,"ge","","",0,[[["level",4]]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["levelfilter",4]]]],[11,"le","","",0,[[["levelfilter",4]]]],[11,"gt","","",0,[[["levelfilter",4]]]],[11,"ge","","",0,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["levelfilter",4]]]],[11,"le","","",1,[[["levelfilter",4]]]],[11,"gt","","",1,[[["levelfilter",4]]]],[11,"ge","","",1,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["level",4]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["level",4]]]],[11,"le","","",1,[[["level",4]]]],[11,"gt","","",1,[[["level",4]]]],[11,"ge","","",1,[[["level",4]]]],[11,"partial_cmp","","",5,[[["metadata",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["metadata",3]]]],[11,"le","","",5,[[["metadata",3]]]],[11,"gt","","",5,[[["metadata",3]]]],[11,"ge","","",5,[[["metadata",3]]]],[11,"partial_cmp","","",6,[[["metadatabuilder",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["metadatabuilder",3]]]],[11,"le","","",6,[[["metadatabuilder",3]]]],[11,"gt","","",6,[[["metadatabuilder",3]]]],[11,"ge","","",6,[[["metadatabuilder",3]]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"from_str","","",0,[[],[["level",4],["result",4]]]],[11,"from_str","","",1,[[],[["result",4],["levelfilter",4]]]],[11,"clone","","",0,[[],["level",4]]],[11,"clone","","",1,[[],["levelfilter",4]]],[11,"clone","","",3,[[],["record",3]]],[11,"clone","","",5,[[],["metadata",3]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"riscv_decode":{"doc":"","i":[[4,"Instruction","riscv_decode","",null,null],[13,"Lui","","",0,null],[13,"Auipc","","",0,null],[13,"Jal","","",0,null],[13,"Jalr","","",0,null],[13,"Beq","","",0,null],[13,"Bne","","",0,null],[13,"Blt","","",0,null],[13,"Bge","","",0,null],[13,"Bltu","","",0,null],[13,"Bgeu","","",0,null],[13,"Lb","","",0,null],[13,"Lh","","",0,null],[13,"Lw","","",0,null],[13,"Lbu","","",0,null],[13,"Lhu","","",0,null],[13,"Lwu","","",0,null],[13,"Ld","","",0,null],[13,"Sb","","",0,null],[13,"Sh","","",0,null],[13,"Sw","","",0,null],[13,"Sd","","",0,null],[13,"Addi","","",0,null],[13,"Slti","","",0,null],[13,"Sltiu","","",0,null],[13,"Xori","","",0,null],[13,"Ori","","",0,null],[13,"Andi","","",0,null],[13,"Slli","","",0,null],[13,"Srli","","",0,null],[13,"Srai","","",0,null],[13,"Add","","",0,null],[13,"Sub","","",0,null],[13,"Sll","","",0,null],[13,"Slt","","",0,null],[13,"Sltu","","",0,null],[13,"Xor","","",0,null],[13,"Srl","","",0,null],[13,"Sra","","",0,null],[13,"Or","","",0,null],[13,"And","","",0,null],[13,"Mul","","",0,null],[13,"Mulh","","",0,null],[13,"Mulhsu","","",0,null],[13,"Mulhu","","",0,null],[13,"Div","","",0,null],[13,"Divu","","",0,null],[13,"Rem","","",0,null],[13,"Remu","","",0,null],[13,"Fence","","",0,null],[13,"FenceI","","",0,null],[13,"Ecall","","",0,null],[13,"Ebreak","","",0,null],[13,"Uret","","",0,null],[13,"Sret","","",0,null],[13,"Mret","","",0,null],[13,"Wfi","","",0,null],[13,"SfenceVma","","",0,null],[13,"Csrrw","","",0,null],[13,"Csrrs","","",0,null],[13,"Csrrc","","",0,null],[13,"Csrrwi","","",0,null],[13,"Csrrsi","","",0,null],[13,"Csrrci","","",0,null],[13,"Addiw","","",0,null],[13,"Slliw","","",0,null],[13,"Srliw","","",0,null],[13,"Sraiw","","",0,null],[13,"Addw","","",0,null],[13,"Subw","","",0,null],[13,"Sllw","","",0,null],[13,"Srlw","","",0,null],[13,"Sraw","","",0,null],[13,"Mulw","","",0,null],[13,"Divw","","",0,null],[13,"Divuw","","",0,null],[13,"Remw","","",0,null],[13,"Remuw","","",0,null],[13,"Flw","","",0,null],[13,"Fsw","","",0,null],[13,"Fmadds","","",0,null],[13,"Fmsubs","","",0,null],[13,"Fnmsubs","","",0,null],[13,"Fnmadds","","",0,null],[13,"Fadds","","",0,null],[13,"Fsubs","","",0,null],[13,"Fmuls","","",0,null],[13,"Fdivs","","",0,null],[13,"Fsqrts","","",0,null],[13,"Fsgnjs","","",0,null],[13,"Fsgnjns","","",0,null],[13,"Fsgnjxs","","",0,null],[13,"Fmins","","",0,null],[13,"Fmaxs","","",0,null],[13,"Fcvtws","","",0,null],[13,"Fcvtwus","","",0,null],[13,"Fmvxw","","",0,null],[13,"Feqs","","",0,null],[13,"Flts","","",0,null],[13,"Fles","","",0,null],[13,"Fclasss","","",0,null],[13,"Fcvtsw","","",0,null],[13,"Fcvtswu","","",0,null],[13,"Fmvwx","","",0,null],[13,"Illegal","","",0,null],[4,"DecodingError","","",null,null],[13,"Custom","","Instruction\'s opcode is reserved for custom extentions and…",1,null],[13,"Reserved","","Instruction\'s opcode is reserved for future standard…",1,null],[13,"Unknown","","Instruction bit pattern not defined in current…",1,null],[13,"Truncated","","More bits from the instruction are required to fully…",1,null],[13,"Unimplemented","","Instruction type is well defined but is part of some…",1,null],[5,"instruction_length","","Return the length (in bytes) of an instruction given the…",null,[[]]],[5,"decode","","Decode the given instruction.",null,[[],[["decodingerror",4],["result",4],["instruction",4]]]],[0,"types","","",null,null],[3,"RType","riscv_decode::types","",null,null],[12,"0","","",2,null],[3,"CsrType","","",null,null],[12,"0","","",3,null],[3,"CsrIType","","",null,null],[12,"0","","",4,null],[3,"IType","","",null,null],[12,"0","","",5,null],[3,"SType","","",null,null],[12,"0","","",6,null],[3,"BType","","",null,null],[12,"0","","",7,null],[3,"UType","","",null,null],[12,"0","","",8,null],[3,"JType","","",null,null],[12,"0","","",9,null],[3,"FenceType","","",null,null],[12,"0","","",10,null],[3,"ShiftType","","",null,null],[12,"0","","",11,null],[3,"R4Type","","",null,null],[12,"0","","",12,null],[11,"rs2","","",2,[[]]],[11,"rs1","","",2,[[]]],[11,"rd","","",2,[[]]],[11,"csr","","",3,[[]]],[11,"rs1","","",3,[[]]],[11,"rd","","",3,[[]]],[11,"csr","","",4,[[]]],[11,"zimm","","",4,[[]]],[11,"rd","","",4,[[]]],[11,"imm","","",5,[[]]],[11,"rs1","","",5,[[]]],[11,"rd","","",5,[[]]],[11,"imm","","",6,[[]]],[11,"rs1","","",6,[[]]],[11,"rs2","","",6,[[]]],[11,"imm","","",7,[[]]],[11,"rs1","","",7,[[]]],[11,"rs2","","",7,[[]]],[11,"imm","","",8,[[]]],[11,"rd","","",8,[[]]],[11,"imm","","",9,[[]]],[11,"rd","","",9,[[]]],[11,"pred","","",10,[[]]],[11,"succ","","",10,[[]]],[11,"shamt","","",11,[[]]],[11,"rs1","","",11,[[]]],[11,"rd","","",11,[[]]],[11,"rs3","","",12,[[]]],[11,"rs2","","",12,[[]]],[11,"rs1","","",12,[[]]],[11,"rd","","",12,[[]]],[11,"from","riscv_decode","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","riscv_decode::types","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"fmt","riscv_decode","",0,[[["formatter",3]],["result",6]]],[11,"fmt","riscv_decode::types","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","riscv_decode","",1,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["instruction",4]]]],[11,"ne","","",0,[[["instruction",4]]]],[11,"eq","riscv_decode::types","",2,[[["rtype",3]]]],[11,"ne","","",2,[[["rtype",3]]]],[11,"eq","","",3,[[["csrtype",3]]]],[11,"ne","","",3,[[["csrtype",3]]]],[11,"eq","","",4,[[["csritype",3]]]],[11,"ne","","",4,[[["csritype",3]]]],[11,"eq","","",5,[[["itype",3]]]],[11,"ne","","",5,[[["itype",3]]]],[11,"eq","","",6,[[["stype",3]]]],[11,"ne","","",6,[[["stype",3]]]],[11,"eq","","",7,[[["btype",3]]]],[11,"ne","","",7,[[["btype",3]]]],[11,"eq","","",8,[[["utype",3]]]],[11,"ne","","",8,[[["utype",3]]]],[11,"eq","","",9,[[["jtype",3]]]],[11,"ne","","",9,[[["jtype",3]]]],[11,"eq","","",10,[[["fencetype",3]]]],[11,"ne","","",10,[[["fencetype",3]]]],[11,"eq","","",11,[[["shifttype",3]]]],[11,"ne","","",11,[[["shifttype",3]]]],[11,"eq","","",12,[[["r4type",3]]]],[11,"ne","","",12,[[["r4type",3]]]],[11,"eq","riscv_decode","",1,[[["decodingerror",4]]]],[11,"hash","","",0,[[]]],[11,"hash","riscv_decode::types","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","riscv_decode","",1,[[]]],[11,"clone","","",0,[[],["instruction",4]]],[11,"clone","riscv_decode::types","",2,[[],["rtype",3]]],[11,"clone","","",3,[[],["csrtype",3]]],[11,"clone","","",4,[[],["csritype",3]]],[11,"clone","","",5,[[],["itype",3]]],[11,"clone","","",6,[[],["stype",3]]],[11,"clone","","",7,[[],["btype",3]]],[11,"clone","","",8,[[],["utype",3]]],[11,"clone","","",9,[[],["jtype",3]]],[11,"clone","","",10,[[],["fencetype",3]]],[11,"clone","","",11,[[],["shifttype",3]]],[11,"clone","","",12,[[],["r4type",3]]],[11,"clone","riscv_decode","",1,[[],["decodingerror",4]]]],"p":[[4,"Instruction"],[4,"DecodingError"],[3,"RType"],[3,"CsrType"],[3,"CsrIType"],[3,"IType"],[3,"SType"],[3,"BType"],[3,"UType"],[3,"JType"],[3,"FenceType"],[3,"ShiftType"],[3,"R4Type"]]},\
"riscv_insn_decode":{"doc":"","i":[[4,"Opcode","riscv_insn_decode","",null,null],[13,"CADDI4SPN","","",0,null],[13,"CADDI","","",0,null],[13,"CNOP","","",0,null],[13,"CFLD","","",0,null],[13,"CLW","","",0,null],[13,"CLD","","",0,null],[13,"CSW","","",0,null],[13,"CSD","","",0,null],[13,"CADDIW","","",0,null],[13,"CLI","","",0,null],[13,"CADDI16SP","","",0,null],[13,"CLUI","","",0,null],[13,"CSRLI","","",0,null],[13,"CSRAI","","",0,null],[13,"CANDI","","",0,null],[13,"CSUB","","",0,null],[13,"CXOR","","",0,null],[13,"COR","","",0,null],[13,"CAND","","",0,null],[13,"CSUBW","","",0,null],[13,"CADDW","","",0,null],[13,"CJ","","",0,null],[13,"CBEQZ","","",0,null],[13,"CBNEZ","","",0,null],[13,"CSLLI","","",0,null],[13,"CLWSP","","",0,null],[13,"CLDSP","","",0,null],[13,"CJR","","",0,null],[13,"CMV","","",0,null],[13,"CBREAK","","",0,null],[13,"CJALR","","",0,null],[13,"CADD","","",0,null],[13,"CSWSP","","",0,null],[13,"CSDSP","","",0,null],[13,"CEBREAK","","",0,null],[13,"NOTFOUND","","",0,null],[4,"InsnStatus","","",null,null],[13,"Illegal","","",1,null],[13,"Legal","","",1,null],[5,"insn_decode","","",null,[[],["insnstatus",4]]],[5,"c_decode","","",null,[[],["opcode",4]]],[5,"get_insn_length","","",null,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["opcode",4]]]],[11,"clone","","",0,[[],["opcode",4]]]],"p":[[4,"Opcode"],[4,"InsnStatus"]]},\
"spin":{"doc":"Synchronization primitives based on spinning","i":[[3,"Mutex","spin","This type provides MUTual EXclusion based on spinning.",null,null],[3,"MutexGuard","","A guard to which the protected data can be accessed",null,null],[3,"RwLock","","A reader-writer lock",null,null],[3,"RwLockReadGuard","","A guard from which the protected data can be read",null,null],[3,"RwLockWriteGuard","","A guard to which the protected data can be written",null,null],[3,"RwLockUpgradeableGuard","","A guard from which the protected data can be read, and can…",null,null],[3,"Once","","A synchronization primitive which can be used to run a…",null,null],[11,"new","","Creates a new spinlock wrapping the supplied data.",0,[[],["mutex",3]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,[[]]],[11,"lock","","Locks the spinlock and returns a guard.",0,[[],["mutexguard",3]]],[11,"force_unlock","","Force unlock the spinlock.",0,[[]]],[11,"try_lock","","Tries to lock the mutex. If it is already locked, it will…",0,[[],[["option",4],["mutexguard",3]]]],[11,"new","","Creates a new spinlock wrapping the supplied data.",1,[[],["rwlock",3]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",1,[[]]],[11,"read","","Locks this rwlock with shared read access, blocking the…",1,[[],["rwlockreadguard",3]]],[11,"try_read","","Attempt to acquire this lock with shared read access.",1,[[],[["rwlockreadguard",3],["option",4]]]],[11,"force_read_decrement","","Force decrement the reader count.",1,[[]]],[11,"force_write_unlock","","Force unlock exclusive write access.",1,[[]]],[11,"write","","Lock this rwlock with exclusive write access, blocking the…",1,[[],["rwlockwriteguard",3]]],[11,"try_write","","Attempt to lock this rwlock with exclusive write access.",1,[[],[["rwlockwriteguard",3],["option",4]]]],[11,"upgradeable_read","","Obtain a readable lock guard that can later be upgraded to…",1,[[],["rwlockupgradeableguard",3]]],[11,"try_upgradeable_read","","Tries to obtain an upgradeable lock guard.",1,[[],[["rwlockupgradeableguard",3],["option",4]]]],[11,"upgrade","","Upgrades an upgradeable lock guard to a writable lock guard.",2,[[],["rwlockwriteguard",3]]],[11,"try_upgrade","","Tries to upgrade an upgradeable lock guard to a writable…",2,[[],[["result",4],["rwlockwriteguard",3]]]],[11,"downgrade","","Downgrades the upgradeable lock guard to a readable,…",2,[[],["rwlockreadguard",3]]],[11,"downgrade","","Downgrades the writable lock guard to a readable, shared…",3,[[],["rwlockreadguard",3]]],[18,"INIT","","Initialization constant of `Once`.",4,null],[11,"new","","Creates a new `Once` value.",4,[[],["once",3]]],[11,"call_once","","Performs an initialization routine once and only once. The…",4,[[]]],[11,"try","","Returns a pointer iff the `Once` was previously initialized",4,[[],["option",4]]],[11,"wait","","Like try, but will spin if the `Once` is in the process of…",4,[[],["option",4]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"deref","","",5,[[]]],[11,"deref","","",6,[[]]],[11,"deref","","",2,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",5,[[]]],[11,"deref_mut","","",3,[[]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"drop","","The dropping of the MutexGuard will release the lock it…",5,[[]]],[11,"drop","","",6,[[]]],[11,"drop","","",2,[[]]],[11,"drop","","",3,[[]]],[11,"default","","",0,[[],["mutex",3]]],[11,"default","","",1,[[],["rwlock",3]]]],"p":[[3,"Mutex"],[3,"RwLock"],[3,"RwLockUpgradeableGuard"],[3,"RwLockWriteGuard"],[3,"Once"],[3,"MutexGuard"],[3,"RwLockReadGuard"]]},\
"system_tracing":{"doc":"System Tracing Module","i":[[4,"ProbePlace","system_tracing","Store the location of the functions that need to be…",null,null],[13,"Kernel","","",0,null],[13,"User","","",0,null],[4,"ProbeType","","Store the type of tracing required, including instruction…",null,null],[13,"Insn","","",1,null],[13,"SyncFunc","","",1,null],[13,"AsyncFunc","","",1,null],[5,"uprobes_trap_handler","","Uprobes Trap Handler",null,[[["usercontext",3]]]],[5,"uprobe_register","","Uprobes Register",null,[[["string",3],["arc",3],["probetype",4],["mutex",3],["option",4]]]],[5,"uprobes_init","","Uprobes Init",null,[[]]],[5,"uprobes_kernel_function_initialization","","Uprobes Kernel Function Initialization If you want to use…",null,[[["arc",3],["mutex",3],["arc",3],["mutex",3]]]],[5,"kprobes_trap_handler","","Kprobes Trap Handler",null,[[["trapframe",3]]]],[5,"kprobe_register","","Kprobes Register",null,[[["option",4],["probetype",4],["arc",3],["mutex",3]]]],[5,"kprobe_unregister","","",null,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["probeplace",4]]],[11,"clone","","",1,[[],["probetype",4]]]],"p":[[4,"ProbePlace"],[4,"ProbeType"]]},\
"trapframe":{"doc":"","i":[[3,"TrapFrame","trapframe","Trap frame of kernel interrupt",null,null],[12,"general","","General registers",0,null],[12,"sstatus","","Supervisor Status",0,null],[12,"sepc","","Supervisor Exception Program Counter",0,null],[3,"UserContext","","Saved registers on a trap.",null,null],[12,"general","","General registers",1,null],[12,"sstatus","","Supervisor Status",1,null],[12,"sepc","","Supervisor Exception Program Counter",1,null],[3,"GeneralRegs","","General registers",null,null],[12,"zero","","",2,null],[12,"ra","","",2,null],[12,"sp","","",2,null],[12,"gp","","",2,null],[12,"tp","","",2,null],[12,"t0","","",2,null],[12,"t1","","",2,null],[12,"t2","","",2,null],[12,"s0","","",2,null],[12,"s1","","",2,null],[12,"a0","","",2,null],[12,"a1","","",2,null],[12,"a2","","",2,null],[12,"a3","","",2,null],[12,"a4","","",2,null],[12,"a5","","",2,null],[12,"a6","","",2,null],[12,"a7","","",2,null],[12,"s2","","",2,null],[12,"s3","","",2,null],[12,"s4","","",2,null],[12,"s5","","",2,null],[12,"s6","","",2,null],[12,"s7","","",2,null],[12,"s8","","",2,null],[12,"s9","","",2,null],[12,"s10","","",2,null],[12,"s11","","",2,null],[12,"t3","","",2,null],[12,"t4","","",2,null],[12,"t5","","",2,null],[12,"t6","","",2,null],[5,"init","","Initialize interrupt handling for the current HART.",null,[[]]],[11,"run","","Go to user space with the context, and come back when a…",1,[[]]],[11,"get_syscall_num","","Get number of syscall",1,[[]]],[11,"get_syscall_ret","","Get return value of syscall",1,[[]]],[11,"set_syscall_ret","","Set return value of syscall",1,[[]]],[11,"get_syscall_args","","Get syscall args",1,[[]]],[11,"set_ip","","Set instruction pointer",1,[[]]],[11,"set_sp","","Set stack pointer",1,[[]]],[11,"get_sp","","Get stack pointer",1,[[]]],[11,"set_tls","","Set tls pointer",1,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["trapframe",3]]],[11,"clone","","",1,[[],["usercontext",3]]],[11,"clone","","",2,[[],["generalregs",3]]],[11,"default","","",0,[[],["trapframe",3]]],[11,"default","","",1,[[],["usercontext",3]]],[11,"default","","",2,[[],["generalregs",3]]]],"p":[[3,"TrapFrame"],[3,"UserContext"],[3,"GeneralRegs"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);