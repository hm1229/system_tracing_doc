(function() {var implementors = {};
implementors["log"] = [{"text":"impl&lt;'a&gt; Freeze for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Freeze for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for LevelFilter","synthetic":true,"types":[]}];
implementors["riscv_decode"] = [{"text":"impl Freeze for Instruction","synthetic":true,"types":[]},{"text":"impl Freeze for DecodingError","synthetic":true,"types":[]},{"text":"impl Freeze for RType","synthetic":true,"types":[]},{"text":"impl Freeze for CsrType","synthetic":true,"types":[]},{"text":"impl Freeze for CsrIType","synthetic":true,"types":[]},{"text":"impl Freeze for IType","synthetic":true,"types":[]},{"text":"impl Freeze for SType","synthetic":true,"types":[]},{"text":"impl Freeze for BType","synthetic":true,"types":[]},{"text":"impl Freeze for UType","synthetic":true,"types":[]},{"text":"impl Freeze for JType","synthetic":true,"types":[]},{"text":"impl Freeze for FenceType","synthetic":true,"types":[]},{"text":"impl Freeze for ShiftType","synthetic":true,"types":[]},{"text":"impl Freeze for R4Type","synthetic":true,"types":[]}];
implementors["riscv_insn_decode"] = [{"text":"impl Freeze for Opcode","synthetic":true,"types":[]},{"text":"impl Freeze for InsnStatus","synthetic":true,"types":[]}];
implementors["spin"] = [{"text":"impl&lt;T&gt; !Freeze for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for RwLock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockUpgradeableGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Once&lt;T&gt;","synthetic":true,"types":[]}];
implementors["system_tracing"] = [{"text":"impl Freeze for ProbePlace","synthetic":true,"types":[]},{"text":"impl Freeze for ProbeType","synthetic":true,"types":[]}];
implementors["trapframe"] = [{"text":"impl Freeze for TrapFrame","synthetic":true,"types":[]},{"text":"impl Freeze for UserContext","synthetic":true,"types":[]},{"text":"impl Freeze for GeneralRegs","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()